@title("Database Access")

[index.html Top Page]
= Databse Access

==Configuring Databases

UTGB has a built-in support of database access for SQLite, PostgreSQL, MySQL, etc.  In order to use such DBMSs, you need to add some configurations in {b|"config/common.silk"} file, written in [silk.html silk] format. 

Here is an example of the database configuration. One of the database tags below shows an example of using an SQLite database, stored as "db/sample.db" file. The address path is relative to the project folder. The next database tag is an example using PostgreSQL database served at localhost:5432 whose database name is 'addressbook'. Each database configuration is associated with an database ID, 'mydb' or 'pgdb'. In the web action code, you can refer these IDs to access these databases.


<code> 
%silk(version:1.0)

# The version number of this configuration file format
-config(version:1.0)

# project group name (for Maven repository)
-group:        org.utgenome.track
# Name of the project. This name will be used for the web application's context path
-project name: myapp
# java package to add/search Web Action codes
-java package:      myapp

# Importing additional web actions under the specified java package.
# Web actions (i.e. java classes) in the specified action package folder will be accessible 
# by the path (alias)/(web action name)
-web action(alias: utgb-core, java package: org.utgenome.gwt.utgb.server.app)

# Database locations settings. 
# Database address for SQLite DB files is relative to the project folder.
# The specified databases will be accessible from your web action codes by referencing the specified id.
-database(id:mydb, dbms:sqlite)
 -address: db/sample.db

-database(id:pgdb, dbms:postgres)
 -address: localhost:5432/addressbook
 -user: postgres
 -pass: (password)
</code>

== Mapping Database Query Results to Java Objects

When your data is stored in an SQLite database with id mydb, you can use SQL queries to retreive object data from the data base.

=== Table Data 
<code>
id|target|start|end|strand|
0|chrX|70518318|70518344|+|
1|chr12|51949963|51949989|-|
2|chr6|48444655|48444681|-|
3|chr13|109111185|109111211|-|
4|chr5|133731340|133731366|-|
</code>

=== Sample Code
<code>
// get database access of mydb. This id is specified in the config/common.silk file
DatabaseAccess dbAccess = UTGBMaster.getDatabaseAccess("mydb");

// execute an SQL query, then bind the result rows to Gene object
List<Gene> result = 
  dbAccess.query(
     String.format("select * from gene where start >= %d order by start", start), 
     Gene.class);

// draw the gene objects to some image
for(Gene eachGene : result)
{
   // ... do some drawings
}
</code>

== Object-Relational Mapping
To learn how UTGB maps table data to objects see [lens.html Lens].

