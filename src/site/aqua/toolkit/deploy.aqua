@title("How to deploy your web application")

[index.html Top Page]
= How to Deploy Your Web Application 

UTGB uses the embedded Tomcat web server, so you don't have to read this page for simply browsing UTGB launched by utgb server command. This page is written for system administrators, who have to publish UTGB servers on the Web by using Apache or Tomcat web servers.  

= Launching UTGB in Standalone Mode

You can start UTGB at any machines. The {b|utgb server} command launches a stand-alone proxy server (AJP) using port 8990, and a Tomcat engine listening port 8989 at the same time. To start utgb as a background process, prepare the following script under your UTGB project:
{i|start-utgb.sh}
<code>
#!/bin/zsh

h=`hostname -s`
UTGB=(full path to utgb command. e.g., /home/leo/local/bin/utgb )
JVM_OPT=-Xmx8g
export JAVA_HOME=(Your java installation folder)
JVM_OPT="${JVM_OPT}" nohup ${UTGB} server > log-$h.out 2>&1 < /dev/null &
</code>
Then {i|"chmod +x"} start-utgb.sh.

Now you can start the server by running the script:
<code>
$ ./start-utgb.sh 
</code>

To shutdown the utgb instance, find the utgb process ID, then simply kill the process:
<code>
$ jps -v
20599 Launcher -Xmx8g -Dclassworlds.conf=/home/leo/local/utgb/current/bin/utgb.conf -Dutgb.home=...
22907 Jps -Dapplication.home=/bio/package/java/jdk1.7.0_02 -Xms8m

$ kill -9 20599
</code>
(TODO: Add a command to shutdown the utgb server)


== Browsing UTGB behind Firewall

If you need to browse UTGB started behind firewall (but accessible through ssh), use {i|dynamic proxy}. Suppose that you have a server machine {i|hx} that runs utgb server, and a gate way machine {i|gate}. Common firewall settings prohibit accesses to port 8989 of the utgb server running at {i|hx}. To access {i|hx}, you need to bypass {i|gate} server:
<code>
hx <- gate <- (your machine)
</code>

To browse UTGB running in {i|hx} from your machine, use the dynamic proxy support of ssh:
<code>
$ ssh -D localhost:1080 gate
</code>
This command creates a network tunnel to {i|hx} through {i|gate}. You can access arbitrary ports of {i|hx} through the port 1080 of your machine.

Next, in your web browser, open network settings and set SOCK Host to use port 1080 at localhost:
<code>
SOCK Host = localhost   port = 1080
</code>
If you are using Google Chrome, [https://chrome.google.com/webstore/detail/caehdcpeofiiigpdhbabniblemipncjj Proxy Switchy!] extension would be useful to switch the configurations quickly. 

When the address of {i|hx} is 192.168.1.100, you can browse the UTGB (e.g., myapp project) at http://192.168.1.100:8989/myapp. This configuration is useful when you want to share the UTGB data only within laboratory members.

= Publishing UTGB 
== How to Use Both Apache and Tomcat Servers Simultaneously 

When you need to create public web services backed by UTGB, a recommended way is to use Apache web server to access UTGB contents. Add the follwoing settings in your Apache's configuration file (e.g., "/etc/httpd/conf/httpd.conf", or "/etc/httpd/conf.d/proxy_ajp.conf"):

<code>
LoadModule proxy_module modules/mod_proxy.so
LoadModule proxy_ajp_module modules/mod_proxy_ajp.so 
# necessary for load balancing (see below)
LoadModule proxy_balancer_module  modules/mod_proxy_balancer.so

ProxyPass /myapp ajp://localhost:8990/myapp
ProxyPassReverseCookiePath / /

</code>

This configuration redirects web accesses to "http://(your hostname)/myapp" to the UTGB server ("http://localhost:8989/myapp" through ajp port 8990), but the web user still sees the address "http://(your hostname)/myapp" without noticing such redirections.

After editing the configuration file, restart the apache server to reload the configuration:
<code>
# /etc/init.d/httpd restart
</code>

== Load Balancing

When the performance of UTGB server matters, replicate the UTGB instances. That is one of the simple ways to distribute the workload of your UTGB server.
First, create replicas of your UTGB project folder (e.g., myapp) on several machines. To do this, you need to copy the entire UTGB folder (myapp) complied by {i|utgb compile} command. To synchronize the myapp folder contents, {i|rsync} command would be useful:
<code>
$ cd /somewhere/myapp
$ for i in $(seq -w 10 14); do rsync -av . hx$i:/somewhere/; done
</code>

Then login and {i|cd} to each of the copied folders to start {i|utgb server}. For example, you can start utgb server in 4 machines (e.g., hx10-hx14) as follows:
<code>
$ for i in $(seq -w 10 14); do ssh hx$i "cd /somewhere/myapp; ./start-utgb.sh"; done
</code>

If hx10-hx14 have IP addresses 192.168.1.(111-114), add the following configuration to your Apache2 server to redirect the web requests to the UTGB servers. (Modify the configuration below according to your system): 

<code>
ProxyPass / balancer://utgb/ nofailover=Off

<Proxy balancer://utgb/>
   BalancerMember ajp://192.168.1.111:8990/ loadfactor=10
   BalancerMember ajp://192.168.1.112:8990/ loadfactor=10
   BalancerMember ajp://192.168.1.113:8990/ loadfactor=10
   BalancerMember ajp://192.168.1.114:8990/ loadfactor=10
</Proxy>
</code>

Then restart your Apache server. That's all. Done!

You can browse your UTGB thorough the Apache web server as the same as before. But in this configuration, accesses to tracks and databases are distributed to four machines. It is much faster than the single server configuration. 

Since no installation of Tomcat is necessary (although you can use locally installed Tomcat servers as explained below), you can quickly improve the performance of the UTGB browser.

//; Login to each server which has a replica of your UTGB application folder, then run {b|utgb server}. The same Apache configuration described above works. 

= Using Pre-installed Tomcat Web Server

Since utgb server can be used in the standalone mode, no need exists to install Tomcat to your system. If you need to deploy UTGB, for some reasons, to system-installed Tomcat servers, here are the tips to do so.

== Install Tomcat Web Server

Tomcat (http://tomcat.apache.org/) is a web server engine for running Java-based web applications. Tomcat version 6.x or higher is recommended for using UTGB. To setup a stand-alone Tomcat server, see the installation instruction here: http://www.xerial.org/trac/Xerial/wiki/WebApplication/Tomcat 

== Install SQLite JDBC

Web applications generated by UTGB use [http://www.xerial.org/trac/Xerial/wiki/SQLiteJDBC SQLite JDBC] database driver. Because of the native library loading problem of JNI (described in [http://www.xerial.org/trac/Xerial/wiki/SQLiteJDBC#UsingSQLiteJDBCwithTomcat6WebServer here]), you have to manually copy SQLite JDBC library into your Tomcat installation folder.

* First, download [http://www.xerial.org/maven/repository/artifact/org/xerial/sqlite-jdbc/3.6.20.1/sqlite-jdbc-3.6.20.1.jar sqlite-jdbc-3.6.20.1.jar].
* Put the downloaded jar file into "(TOMCAT_HOME)/lib" folder. (for Tocmat 6.x or higher)

== Set up Tomcat Manager 

In order to deploy your UTGB browser, you have to set up the Tomcat manager's user account by editing the "(TOMCAT_HOME)/conf/tomcat-users.xml" file:

* "(TOMCAT_HOME)/conf/tomcat-users.xml"
<code>
<?xml version='1.0' encoding='utf-8'?>
<tomcat-users>
  <role rolename="manager"/>
  <role rolename="admin"/>
  <user username="tomcat-admin" password="pass" roles="admin,manager"/>
</tomcat-users>
</code>

* Then, restart your Tomcat to apply the above configuration change.

== Create settings.xml File
Next, you have to create ".m2/settings.xml" file in your home directory:

* "(HOME)/.m2/settings.xml"
<code>
<settings>
 <servers>
  <server>
    <id>tomcat</id>
    <username>tomcat-admin</username>
    <password>pass</password>
   </server>
 </servers>
</settings>
</code>

* In this file, write the same user name and password described in your tomcat-users.xml file.

== Deploy Your Web Application to the Tomcat 

Now, you are ready to deploy your UTGB browser to your Tomcat server. Type {b|utgb deploy} in your project folder. Suppose that your web application name is 'myapp' (which is generated by 'utgb create myapp' command):

<code>
$ cd myapp
$ utgb deploy
</code>

Then, access the http://localhost:8080/myapp

== Load balancing 

Load balancing using multiple servers can be done using the same configuration as explained before, except the port number of AJP. Instead of 8989 used in UTGB, you need to specify 8009, which is the default port number of AJP launched in Tomcat engine:

<code>
ProxyPass / balancer://utgb/ nofailover=Off

<Proxy balancer://utgb/>
   BalancerMember ajp://192.168.1.111:8009/ loadfactor=10
   BalancerMember ajp://192.168.1.112:8009/ loadfactor=10
   BalancerMember ajp://192.168.1.113:8009/ loadfactor=10
   BalancerMember ajp://192.168.1.114:8009/ loadfactor=10
</Proxy>
</code>

You need to deploy your UTGB project to each Tomcat server.








